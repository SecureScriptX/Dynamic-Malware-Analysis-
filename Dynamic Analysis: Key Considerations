Conducting Dynamic Analysis: Post-Execution Steps

Dynamic analysis involves running malware on our system to observe its behavior. However, what actions should be taken after executing the malware? 

Let's outline the crucial steps to take after executing malware.

1. **Process Activities:**
   - Malware, like other applications, creates processes during execution.
   - Detecting these processes is the initial step before further analysis.
   - Focus on aspects such as the creation of new child processes, imported DLLs, and the user executing the process.

2. **Monitoring System Activities:**
   - Numerous activities occur in the operating system, including processes, network interactions, registry changes, and file operations.
   - Given the volume of activities, it's practical to begin by scrutinizing the activities of the malware processes.
   - Look for patterns or unusual behaviors that could provide insights into the malware's functionality.

By paying attention to these aspects during dynamic analysis, you can gain valuable information about the malware's behavior and potential impact on the system.

"Process Hacker" is a great application as it simplifies process examination by presenting processes in a hierarchical view. When malware generates a new process, the newly created process is displayed under its parent process!

Malware often injects itself into various processes, engaging in activities for its own objectives using living-off-the-land binaries or coercing legitimate applications to run malicious code. Due to these tactics, it's crucial to analyze the activities of all processes associated with the malware.

For example, let's consider a scenario where the malware injects itself into the notepad.exe process post-execution. In such cases, a comprehensive examination of all activities initiated by notepad.exe since the injection is necessary.

### Network Activities

Malware often establishes network connections for various purposes, including downloading a second payload, communicating with command and control (C2), moving laterally to other devices in the network, and stealing data.

In the final stages of malware analysis, it is essential to identify these network connections, understand how the malware communicates, and document these network activities.

**Tools:**
- **Wireshark:** Comprehensive software for analyzing network activities.
- **Fiddler:** Useful for cases where malware communicates primarily over the HTTP protocol (common for malware communication).

### Registry Activities

Registries are hierarchical databases used for data storage in Windows operating systems. Attackers leverage registries for tasks such as data theft and ensuring persistence.

Windows stores applications to run on startup in specific registry keys. Attackers exploit this feature, adding their malicious software to these keys to ensure persistence.

**Relevant Registry Keys:**
- `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
- `HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce
- `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run
- `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce

Given that registries are also utilized by normal processes, focus on identifying registry changes made by malicious software processes. Utilize tools like "Regshot" to detect alterations made by the malware on the registries.

### File Activities

Malware engages in various file activities within the operating system for diverse reasons. In recent times, attackers have evolved to use fileless malware to evade detection.

On Windows, the "Temp" directory serves as a location for temporary files. Typically, applications utilize this directory for hosting volatile files. Malware frequently replicates itself into the Temp directory, making it crucial to closely monitor activities within this directory.

To access this directory:
1. Press the “Win + R” key combination.
2. Type the following command:
    ```
    %TEMP%
    ```

To ensure persistence, malware often replicates itself into the Startup directory, where applications automatically run upon the operating system's startup. It's crucial to closely monitor activities within these directories.

To access the Startup directory:
1. Press the “Win + R” key combination.
2. Type the following command:
    ```
    shell:startup
    ```
   For the common startup directory, you can use:
    ```
    shell:common startup
    ```

Conclusion:
By paying meticulous attention to these aspects during dynamic analysis, security professionals and analysts can gather valuable information about the malware's behavior, its potential impact on the system, and develop effective strategies for mitigation.
